generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  credentials credentials[]
  notes       notes[]
  wifis       wifis[]
  cards       cards[]
}

model credentials {
  id        Int       @id @default(autoincrement())
  title     String
  password  String
  url       String
  username  String
  userId    Int?
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  users     users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model notes {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(50)
  text      String    @db.VarChar(1000)
  userId    Int?
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  users     users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model wifis {
  id        Int       @id @default(autoincrement())
  title     String
  name      String    
  password  String    
  userId    Int?
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  users     users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model cards {
  id        Int       @id @default(autoincrement())
  title     String
  holderName      String    
  password  String
  cardNumber    String
  cvv       String
  expirationDate String    
  userId    Int?
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  users     users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}